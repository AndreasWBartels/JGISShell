<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema jaxb:version="2.0"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
  xmlns="http://www.anwiba.net/wfs/filter"
  xmlns:geo="http://www.anwiba.net/wfs/geometry"
  targetNamespace="http://www.anwiba.net/wfs/filter"
  elementFormDefault="qualified">

  <xsd:annotation>
    <xsd:appinfo>
      <jaxb:schemaBindings>
        <jaxb:package name="net.anwiba.spatial.wfs.schema.filter"/>
      </jaxb:schemaBindings>
    </xsd:appinfo>
  </xsd:annotation>

  <xsd:import namespace="http://www.anwiba.net/wfs/geometry" schemaLocation="geometry.xsd"/>

  <xsd:element name="accept" type="AbstractFilterType" abstract="false"/>

  <xsd:complexType name="AbstractFilterType" abstract="true">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="AbstractFilter"/>
      </xsd:appinfo>
    </xsd:annotation>
  </xsd:complexType>

  <xsd:element name="filter" type="FilterType" substitutionGroup="accept"/>

  <xsd:complexType name="FilterType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="Filter"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractFilterType">
        <xsd:sequence>
          <xsd:element ref="condition" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="elseFilter" type="ElseFilterType" substitutionGroup="accept"/>

  <xsd:complexType name="ElseFilterType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="ElseFilter"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractFilterType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="condition" type="AbstractConditionType" abstract="false"/>


  <xsd:element name="and" type="AndType" substitutionGroup="condition"/>

  <xsd:complexType name="AndType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="And"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractListConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="or" type="OrType" substitutionGroup="condition"/>

  <xsd:complexType name="OrType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="Or"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractListConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="not" type="NotType" substitutionGroup="condition"/>

  <xsd:complexType name="NotType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="Not"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractConditionType">
        <xsd:sequence>
          <xsd:element ref="condition" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="isNull" type="IsNullType" substitutionGroup="condition"/>

  <xsd:complexType name="IsNullType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="IsNull"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractConditionType">
        <xsd:sequence>
          <xsd:element name="name" type="xsd:string" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="notEqual" type="NotEqualType" substitutionGroup="condition"/>

  <xsd:complexType name="NotEqualType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="NotEqual"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractPropertyConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="equal" type="EqualType" substitutionGroup="condition"/>

  <xsd:complexType name="EqualType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="Equal"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractPropertyConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="greaterThan" type="GreaterThanType" substitutionGroup="condition"/>

  <xsd:complexType name="GreaterThanType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="GreaterThan"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractPropertyConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="greaterEqualThan" type="GreaterEqualThanType" substitutionGroup="condition"/>

  <xsd:complexType name="GreaterEqualThanType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="GreaterEqualThan"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractPropertyConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="lessEqualThan" type="LessEqualThanType" substitutionGroup="condition"/>

  <xsd:complexType name="LessEqualThanType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="LessEqualThan"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractPropertyConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="lessThan" type="LessThanType" substitutionGroup="condition"/>

  <xsd:complexType name="LessThanType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="LessThan"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractPropertyConditionType">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:element name="boundingBox" type="BoundingBoxType" substitutionGroup="condition"/>

  <xsd:complexType name="BoundingBoxType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="BoundingBox"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractConditionType">
        <xsd:sequence>
          <xsd:element name="name" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="value" type="geo:EnvelopeType" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="identifier" type="IdentifierType" substitutionGroup="condition"/>

  <xsd:complexType name="IdentifierType">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="Identifier"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractConditionType">
        <xsd:sequence>
          <xsd:element name="value" type="xsd:string" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>


  <xsd:complexType name="AbstractConditionType" abstract="true">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="AbstractCondition"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>


  <xsd:complexType name="AbstractListConditionType" abstract="true">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="AbstractListCondition"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractConditionType">
        <xsd:sequence>
          <xsd:element ref="condition" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AbstractPropertyConditionType" abstract="true">
    <xsd:annotation>
      <xsd:appinfo>
        <jaxb:class name="AbstractPropertyCondition"/>
      </xsd:appinfo>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractConditionType">
        <xsd:sequence>
          <xsd:element name="name" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="value" type="xsd:string" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

</xsd:schema>